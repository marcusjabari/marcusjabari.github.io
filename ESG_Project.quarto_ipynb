{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "---\n",
        "title: \"ESG Project\"\n",
        "format: html\n",
        "---\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "## Background\n",
        "\n",
        "Environmental, Social, and Governance (ESG) factors are critical to assessing the long-term sustainability and ethical impact of companies. Investors and regulators increasingly rely on ESG metrics to make informed decisions, reduce risk exposure, and ensure accountability. This project explores ESG-related data—specifically **Controversy Level**—as a proxy for stature and compliance risks across companies and sectors.\n",
        "\n",
        "Aside from scraping current ESG Ratings using Selenium, the main focus was geared toward analyzing **Controversy Levels**, alongside company characteristics such as **Sector**, **Market Capitalization**, and **IPO Year**. This approach still offers meaningful insights into corporate behavior and sustainability risk patterns.\n",
        "\n",
        "## Scraping ESG Scores with Selenium (Python)\n",
        "\n",
        "The ESG risk and controversy scores for 2025 were scraped from Yahoo Finance using Python and Selenium. Below is the full script that was used:\n"
      ],
      "id": "06bfb81d"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "# This is not executed; for documentation only\n",
        "\n",
        "import time\n",
        "import random\n",
        "import pandas as pd\n",
        "import os\n",
        "from selenium import webdriver\n",
        "from selenium.webdriver.common.by import By\n",
        "from selenium.webdriver.chrome.options import Options\n",
        "from selenium.webdriver.support.ui import WebDriverWait\n",
        "from selenium.webdriver.support import expected_conditions as EC\n",
        "\n",
        "# Loading my ESG data\n",
        "```python\n",
        "url_2025 = \"https://bcdanl.github.io/data/esg_proj_2025.csv\"\n",
        "esg_proj_2025 = pd.read_csv(url_2025)\n",
        "\n",
        "# Optional: Set working directory\n",
        "wd_path = '/Users/marcusjabari/Documents/marcusjabari.github.io/'\n",
        "os.chdir(wd_path)\n",
        "\n",
        "# Setup Chrome WebDriver\n",
        "options = Options()\n",
        "options.add_argument(\"window-size=1400,1200\")\n",
        "options.add_argument('--disable-blink-features=AutomationControlled')\n",
        "options.page_load_strategy = 'eager'\n",
        "driver = webdriver.Chrome(options=options)\n",
        "\n",
        "# Store results\n",
        "esg_scores = []\n",
        "controversy_levels = []\n",
        "\n",
        "for symbol in esg_proj_2025['Symbol']:\n",
        "    print(f\"Scraping {symbol}...\")\n",
        "    url = f'https://finance.yahoo.com/quote/{symbol}/sustainability/'\n",
        "    driver.get(url)\n",
        "    time.sleep(4)\n",
        "\n",
        "    try:\n",
        "        esg_score = WebDriverWait(driver, 10).until(\n",
        "            EC.presence_of_element_located((By.XPATH, '/html/body/div[2]/main/section/section/section/article/section[2]/section[1]/div/section[1]'))\n",
        "        ).text\n",
        "    except:\n",
        "        esg_score = None\n",
        "\n",
        "    try:\n",
        "        controversy = WebDriverWait(driver, 10).until(\n",
        "            EC.presence_of_element_located((By.XPATH, '/html/body/div[2]/main/section/section/section/article/section[3]/section[1]/div/div[2]'))\n",
        "        ).text\n",
        "    except:\n",
        "        controversy = None\n",
        "\n",
        "    esg_scores.append(esg_score)\n",
        "    controversy_levels.append(controversy)\n",
        "\n",
        "    print(f\"{symbol}: ESG = {esg_score}, Controversy = {controversy}\")\n",
        "    time.sleep(2 + random.random())\n",
        "\n",
        "driver.quit()\n",
        "\n",
        "# Save the data\n",
        "esg_proj_2025['esg_score'] = esg_scores\n",
        "esg_proj_2025['controversy_level'] = controversy_levels\n",
        "esg_proj_2025.to_csv(\"esg_results_202_"
      ],
      "id": "517a124d",
      "execution_count": null,
      "outputs": []
    }
  ],
  "metadata": {
    "kernelspec": {
      "display_name": "Python 3",
      "language": "python",
      "name": "python3"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 5
}